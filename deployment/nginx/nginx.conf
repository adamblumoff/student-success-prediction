# Production Nginx Configuration
# Secure reverse proxy with caching and security headers

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;  # Hide nginx version
    
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Security Headers (applied to all responses)
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'" always;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Upstream Backend
    upstream app_backend {
        server app:8000;
        keepalive 32;
    }
    
    # Main Server Block
    server {
        listen 80;
        server_name _;
        
        # Security configurations
        client_max_body_size 10M;
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
        
        # Connection limits
        limit_conn conn_limit_per_ip 20;
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }
        
        # Health check (no rate limiting)
        location /health {
            proxy_pass http://app_backend/api/health/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            access_log off;
        }
        
        # API endpoints with rate limiting
        location /api/ {
            # Apply rate limiting based on endpoint
            if ($request_uri ~ "^/api/mvp/(analyze|analyze-detailed|analyze-k12)") {
                set $upload_endpoint 1;
            }
            if ($request_uri ~ "^/api/mvp/auth/") {
                set $login_endpoint 1;
            }
            
            # Rate limit upload endpoints
            if ($upload_endpoint) {
                limit_req zone=upload burst=2 nodelay;
            }
            
            # Rate limit login endpoints
            if ($login_endpoint) {
                limit_req zone=login burst=1 nodelay;
            }
            
            # Default API rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Proxy to backend
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Static files (cached)
        location /static/ {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            
            # Caching for static assets
            expires 1d;
            add_header Cache-Control "public, no-transform";
            
            # Enable gzip for static files
            gzip_static on;
        }
        
        # Root and other requests
        location / {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }
    
    # HTTPS Server Block (if SSL certificates are available)
    server {
        listen 443 ssl http2;
        server_name _;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS Header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Include the same location blocks as HTTP server
        include /etc/nginx/conf.d/shared-locations.conf;
    }
}